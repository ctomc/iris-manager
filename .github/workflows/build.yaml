name: Build

on:
  push:
    branches:
      - master
      - feat-*
      - test-*
  pull_request:
    branches: [ master ]
  workflow_dispatch:
env:
  ROOT_AWS_ACCOUNT_ID: 715299534867

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v4
        with:
          repositories: '[{ "id": "globalid", "name": "GlobalId repo", "url": "https://repository.internal.globalid.dev/repository/maven-internal-group/", "releases": { "enabled": "true" }, "snapshots": { "enabled": "true" } }]'
          plugin_repositories: '[{ "id": "globalid", "name": "GlobalId repo", "url": "https://repository.internal.globalid.dev/repository/maven-internal-group/", "releases": { "enabled": "true" }, "snapshots": { "enabled": "true" }}]'
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dquarkus.container-image.tag=${{ github.sha }} -Dquarkus.container-image.registry=715299534867.dkr.ecr.us-east-1.amazonaws.com -Dquarkus.container-image.group=core
      - run: ls -l target/
      - name: prepare manifests
        run: |
            cp target/kubernetes/kubernetes.yml ./dev_manifest.yaml
            cp target/kubernetes/kubernetes.yml ./stg_manifest.yaml
            cp target/kubernetes/kubernetes.yml ./prod_manifest.yaml
      - name: Store manifests
        uses: actions/upload-artifact@v2
        with:
          name: manifest
          path: "*manifest.yaml"
      - name: Store app
        uses: actions/upload-artifact@v2
        with:
          name: quarkus-app
          path: "target/quarkus-app/"
  docker:
    if: github.ref == 'refs/heads/master'
    needs: build
    name: Build and release image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: quarkus-app
          path: target/quarkus-app/
      - name: Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.ROOT_AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/iris/manager
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,format=long,prefix=

      - name: Login to AWS ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ROOT_AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: npm token
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}">.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: src/main/docker/Dockerfile.jvm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    needs:
      - docker
      - build
    uses: globalid/core-auth/.github/workflows/_deploy.yml@master
    with:
      env-name: "dev"
      namespace: "core"
    secrets:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
